# This file is automatically generated by gen-makefile.sh
# YOU MAY NEED TO EDIT THIS FILE MANUALLY
#
# Generated on 2022-11-14 16:35:04 CET

TRACKING_FILE= /var/lib/jhalfs/BLFS/instpkg.xml

BOLD= "[0;1m"
RED= "[1;31m"
GREEN= "[0;32m"
ORANGE= "[0;33m"
BLUE= "[1;34m"
WHITE= "[00m"

define echo_message
  @echo $(BOLD)
  @echo --------------------------------------------------------------------------------
  @echo $(BOLD)$(1) target $(BLUE)$@$(BOLD)
  @echo $(WHITE)
endef


define end_message
  @echo $(BOLD)
  @echo --------------------------------------------------------------------------------
  @echo $(BOLD) Build complete for the package $(BLUE)$(PACKAGE)$(BOLD) and its dependencies
  @echo $(WHITE)
endef

all :  001-z-libxml2 002-z-libxslt 003-z-sgml-common 004-z-unzip 005-z-DocBook 006-z-docbook-xsl 007-z-wget 008-z-libtasn1 009-z-p11-kit 010-z-make-ca 011-z-curl 012-z-git 013-z-gpm 014-z-lynx 015-z-sudo update
	@$(call end_message )

001-z-libxml2:  
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

002-z-libxslt:  001-z-libxml2
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

003-z-sgml-common:  002-z-libxslt
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

004-z-unzip:  003-z-sgml-common
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

005-z-DocBook:  004-z-unzip
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

006-z-docbook-xsl:  005-z-DocBook
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

007-z-wget:  006-z-docbook-xsl
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

008-z-libtasn1:  007-z-wget
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

009-z-p11-kit:  008-z-libtasn1
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

010-z-make-ca:  009-z-p11-kit
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

011-z-curl:  010-z-make-ca
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

012-z-git:  011-z-curl
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

013-z-gpm:  012-z-git
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

014-z-lynx:  013-z-gpm
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)

015-z-sudo:  014-z-lynx
	@$(call echo_message, Building)
	@/bin/bash progress_bar.sh $@ $$PPID &
	@../scripts/$@ >logs/$@ 2>&1
	@touch  $@ && \
	sleep .25 && \
	echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK && \
	echo --------------------------------------------------------------------------------$(WHITE)
update:
	@echo Updating the tracking file
	@for pack in $$(grep '<productname' ../lfs-xml/tmp/lfs-full.xml | \
		sed 's/.*>\([^<]*\)<.*/\1/' | \
		sort | uniq); do \
	    case "x$$pack" in \
	      xgcc* | *pass[12] | xvim | \
	      xshadow | xPython | xlinux-headers | xdbus | xsystemd )\
		continue ;; \
	    esac; \
	    VERSION=$$(grep -A1 ">$$pack</product" \
			../lfs-xml/tmp/lfs-full.xml | \
		head -n2|  \
		sed -n '2s/.*>\([^<]*\)<.*/\1/p');  \
	    xsltproc --stringparam packages ../packages.xml \
		--stringparam package $$pack \
		--stringparam version $$VERSION \
		-o track.tmp \
		../xsl/bump.xsl $(TRACKING_FILE); \
	    sed -i 's@PACKDESC@/blfs_root/packdesc.dtd@' track.tmp; \
	    xmllint --format --postvalid track.tmp > $(TRACKING_FILE); \
	    rm track.tmp; \
	done; \
	VERSION=$$(grep 'echo.*lfs-release' ../lfs-xml/tmp/lfs-full.xml | \
	             sed 's/.*echo[ ]*\([^ ]*\).*/\1/'); \
	xsltproc --stringparam packages ../packages.xml \
	    --stringparam package LFS-Release \
	    --stringparam version $$VERSION \
	    -o track.tmp \
	    ../xsl/bump.xsl $(TRACKING_FILE); \
	sed -i 's@PACKDESC@/blfs_root/packdesc.dtd@' track.tmp; \
	xmllint --format --postvalid track.tmp > $(TRACKING_FILE); \
	rm track.tmp; \
	for file in *-*; do \
	    xsltproc --stringparam packages ../packages.xml \
		--stringparam package $${file##*z-} \
		-o track.tmp \
		../xsl/bump.xsl $(TRACKING_FILE); \
	    sed -i 's@PACKDESC@/blfs_root/packdesc.dtd@' track.tmp; \
	    xmllint --format --postvalid track.tmp > $(TRACKING_FILE); \
	    rm track.tmp; \
	done
	@touch $@
	@echo -e "\n\n "$(BOLD)Target $(BLUE)$@ $(BOLD)OK
	@echo --------------------------------------------------------------------------------$(WHITE)
